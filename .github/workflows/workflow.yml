# This GitHub Actions workflow triggers after receiving a Push event from GH Actions environment. This works
# with providers like Vercel, Heroku and others. This workflow does the following
#
# - Runs after push event
# - Uses the API key and account ID GitHub secrets
# - Deploy all the checks to Checkly
#
#  You can of course trigger the Checkly CLI in other workflows or steps inside your GH Action configuration.
name: 'checkly'
on: push

# Set the necessary credentials, these should set as secrets in the repo
# before running this workflow.
env:
  CHECKLY_API_KEY: ${{ secrets.CHECKLY_API_KEY }}
  CHECKLY_ACCOUNT_ID: ${{ secrets.CHECKLY_ACCOUNT_ID }}
jobs:
  test-e2e:
    name: Test E2E on Checkly
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          ref: '${{ github.event.deployment_status.deployment.ref }}'
          fetch-depth: 0
      - name: Set branch name # this is workaround to get the branch name.
        run: echo "CHECKLY_TEST_REPO_BRANCH=$(git show -s --pretty=%D HEAD | tr -s ',' '\n' | sed 's/^ //' | grep -e 'origin/' | head -1 | sed 's/\origin\///g')" >> $GITHUB_ENV
      - uses: actions/setup-node@v3
      - name: Restore or cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Deploy checks # deploy the checks
        id: deploy-checks
        run: npx checkly deploy --force
